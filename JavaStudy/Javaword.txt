■ 開発
ウォーターフォール開発
要件定義や外部設計・内部設計といった工程を、上流工程から下流工程へ順に行っていく手法。各工程が完了するまでは次の工程に進まない、前の工程には戻らないという特徴がある。

アジャイル開発
スピード感に強みを持つ開発手法。要件定義や外部設計・内部設計などの工程を少しづつ反復して行うため、要望に応じたアップデートに対応しやすい。

マイグレーション
現在使用しているシステムやソフトウェアから別のものに移行すること。

デグレーション
プログラムにおいて直していたはずのバグが復活していたり、前はなかったはずのバグがあったり、実装したはずの機能がなくなっている状態のこと。


デプロイ
開発した機能やサービスを利用できる状態にすること。

コンフリクト
複数のプログラムが同じデータやファイルを同じタイミングで使おうとして衝突してしまっている状態のこと。

環境
-開発環境（ローカル）
実際のサーバーにアップする前に、サイトの動作や表示確認を手持ちのパソコン内で行うこと。

-検証環境（ステージング）
本番環境に条件を限りなく近づけた、最終テスト用に用いる本番環境と類似のテスト環境のこと。

-本番環境
システムやソフトウェアの開発において、システムが実際に製品として稼働し、ユーザーがシステムを利用する環境のことをいいます。

設計書／仕様書
-要件定義
システムやソフトウェアの開発において実装すべき機能や満たすべき性能などを明確にしていく作業のこと。
-基本設計書
システムを外から見たときどういう動きをするか（＝外部設計、What）を決めるもの。

-詳細設計書
基本設計で決められた動きを、どうやって実現するか（＝内部設計、How）を決めるもの。

テスト
-単体テスト（UT）
開発をしたシステムを機能ごとに検証する。

-結合テスト（CT／IT）
システムにおける複数の機能を組み合わせて動作を検証。

-総合テスト（ST）
システムにおける機能をすべて結合して、本番と似た環境でシステムを検証する。プロジェクトの最初に作成された要件定義を参考に、機能要件や非機能要件の不具合を検証するのが一般的。

エビデンス／証跡
システム開発などで、最終検証段階においてシステムが発注通りに動作していることを示す証拠となる書類やデータなどのこと。

データパッチ
コンピュータにおいてプログラムの一部分を更新してバグ修正や機能変更を行うためのデータのこと

Access
機器やソフトウェア、システム、情報などを利用（操作、取得、閲覧、読み書きなど）可能な状態にすること。特に、コンピュータのストレージ装置（外部記憶装置）内に保存されたデータを読み出したり、上書きや削除などを行うことをアクセスということが多い。

マクロ
エクセルの操作を自動化する機能のこと。
-VBA
Microsoftが提供するアプリケーションで使用できるプログラミング言語。

GAS（Google Apps Script）
Googleが提供するサーバーサイド・スクリプト環境のこと。

API
その機能と関係のないプログラムなどから、そよ機能を利用できるように用意された窓口部分のこと。
-WEB API
Webサイトに外部のサイトの提供する機能や情報を組み込んだり、アプリケーションソフトからWeb上で公開されている機能や情報を利用する際などに用いられる。

-REST API
REST と呼ばれる設計原則に従って策定されたもの。

-SOAP
XMLとHTTPを基本として、Web APIで用いるメッセージの形式や通信手順（プロトコル）などを規定した標準規格で、用途や目的ごとに詳細な拡張仕様が規定されている。

Ajax
あるWebページを表示した状態のまま、別のページや再読み込みなどを伴わずにWebサーバ側と通信を行い、動的に表示内容を変更する手法。
-XML
文章の見た目や構造を記述するためのマークアップ言語の一種。主にデータのやりとりや管理を簡単にする目的で使われる。

-JSON
JavaScript Object Notationの略。JavaScriptにおけるオブジェクトの表記法を応用したデータ形式。テキスト（文字）ベースの形式の一つで、多数の要素が複雑な構造で組み合わせられたデータを簡潔な表記で書き表すことができる。JavaScriptプログラム上ではコードとして実行するだけで読み込みが完了する。

-ステータスコード
HTMLを表示する前にブラウザが受信する3桁の番号。

-クロスオリジン（Cross-Origin）／CORS（Cross-Origin Resource Sharing）
追加の HTTP ヘッダーを使用して、あるオリジンで動作しているウェブアプリケーションに、異なるオリジンにある選択されたリソースへのアクセス権を与えるようブラウザーに指示するための仕組み。

バリデーション
記述・入力されたデータがあらかじめ規定された条件や仕様、形式などに適合しているかどうか検証・確認すること。

データ連携
異なるアプリケーションやシステムをまたいでデータを共有、活用するために、それぞれの言葉や解釈の垣根を取り払うプロセスのこと。
-Daemon
UNIX系OSでメインメモリ上に常駐して特定の機能を提供するプログラム。

-CRON
多くのUNIX系OSで標準的に利用される常駐プログラム（デーモン）の一種で、利用者の設定したスケジュールに従って指定されたプログラムを定期的に起動してくれるもの。

-バッチ
「ひと束」「一群」「1回分にまとめる」という意味。バッチ処理とはあらかじめ登録した一連の処理を自動的に実行する処理方式。

-ログ
コンピュータの利用状況やデータ通信など履歴や情報の記録を取る事、またその記録を指す。

-CSV
Comma Separated Valueの略で、カンマ区切った値のこと。アプリケーション間でデータをやり取りする際に使われる。

-TSV
文字や文字列の間にタブ記号を挿入して区切りを設けること。表計算やデータベースのデータをテキストファイルで保存する場合などに利用される。

プルリクエスト（マージリクエスト）
コードの変更をレビュワーに通知し、マージを依頼する機能です。 コードのレビューを受けること。

■ チケット管理ツール
タスク管理ツールのこと。
-asana
追求されたUIや操作性が特徴。カンバン形式やリスト形式を選べるなど、自身が使いやすいようにカスタムすることも可能。

-Backlog
タスクをただ管理するだけでなく、グラフ化して分析するための材料を用意してある。

-Jooto
仕事や作業を入力した付箋のようなタスクカードをドラッグ&ドロップで動かす。

-Readmine
タスク情報をリアルタイムで共有でき、情報が一箇所のデータベースで集中管理されているので整理しやすい。

-Trello
無料で全ての機能が使え、同じボードを利用できる人数に制限がない。ユーザー数が一番多い。

■ バージョン管理
集中型
コードの管理はすべて中央のリポジトリだけで管理されている。1つのリポジトリを全員で共有して、commitは共有リポジトリへの反映を意味する。

分散型
コード管理は中央のリポジトリとそのコピーを各自のローカルなワークスペースに置いたものとになる。commitはローカルリポジトリに対して行い、そのcommit内容を共有リポジトリに反映させる(push)仕組み。

Github
Gitの仕組みを利用して、世界中の人々が自分の作品(プログラムコードやデザインデータなど)を保存、公開することができるようにしたウェブサービスの名称。

Backlog
バージョン管理システムの「Git」や「Subversion」のリポジトリ機能を搭載して、ソースコードを管理。ソースコードとプロジェクトをひも付けて管理することで作業内容を簡単にチームに共有できる。

SourceTree
Gitを簡単に使えるようにしたツール。

Tortoise SVN
Subversion (SVN)のクライアントで、Windowsのシェルエクステンションとして機能する。Subversionのコマンドを実行する必要がなく、直観的に簡単に使える。

Git Flow
チームで Git を使う際に役立つ、運用ルールをまとめたツール（プラグイン）。
-master
本番に反映するファイルで、基本的にこちらにはコミットしない。

-release
ブランチ元：develop/マージ先：developとmaster
リリース前の微調整を行うブランチで、小さなバグ修正などが行われる。

-develop
開発を行うブランチ。

  -feature
  ブランチ元：develop/マージ先：develop
  追加機能などの作業をする。


■ FW／ライブラリ
FW
-Spring Framework
Javaの開発環境で使用できるオープンソースのWebアプリケーションフレームワーク。「DI(依存性注入)」と「AOP(アスペクト指向プログラミング)」を中核とした豊富な機能を搭載している。

-Struts
Java Servlet や JSP の技術を用いて、Web アプリケーションを構築する上で有用な、オープンソースフレームワーク。

-JSF（Java Server Faces）
Webアプリケーションのユーザインタフェースを作成するためのアプリケーションフレームワーク。

ライブラリ
-Bootstrap
CSSのフレームワーク。よく使われるスタイルがテンプレートとしてあらかじめ用意してある。

-Flyway
オープンソースのデータベースマイグレーションツール。

-Jackson
JacksonはJavaで使えるJSONライブラリで、JSON形式の文字列をJavaのオブジェクトに直接マッピングしたり、逆にJavaオブジェクトをJSON文字列に変換できる。

-jQuery
JavaScriptのライブラリ。JavaScriptを使いやすいように拡張してくれているもの。

-Junit
Javaプログラムの単体テストを行うためのツール。

-Log4j
Jakartaプロジェクトで開発が進められている Java プログラム用のログAPI 。

-Lombok
Java言語におけるボイラープレートコードをソースコードから排除するために使用するライブラリ。ボイラープレートコードとは、言語仕様上省く事ができない定型的なコードの事。

-ORM
オブジェクト関係マッピング。データベースとオブジェクト指向プログラミング言語の間の非互換なデータを変換するプログラミング技法。

■ 連絡ツール
ChatWork
日本発のビジネスチャットツール。チャット機能、タスク管理機能、ファイル共有機能を搭載している。チャット画面と同画面でタスクの管理が可能。

Slack
チーム内でのコミュニケーションをとることができるチャットサービス。プログラミング言語を共有する機能がある。

IP Messenger
LAN 用メッセンジャーソフト。同じネットワーク内のメンバーを自動認識し、簡単にクライアント同士がリアルタイムに情報交換できる。

■ Java
Javadoc
Java言語のソースコードに一定の書式でコメントを記述することで、クラスの説明やメソッドの呼び出し方などの仕様をHTMLなどの文書形式でまとめてくれる仕組み。

アノテーション
データやプログラムの中に特殊な記法を用いて埋め込まれた付加情報のこと。

メモリ管理
コンピュータのメモリを管理するもの。
-ヒープ
データ構造の一種で、ツリー構造のうち、親要素が子要素より常に大きい（あるいは小さい）という条件を満たすもの。また、コンピュータプログラムが利用するメモリ領域の種類の一つで、実行時に任意のタイミングで確保や解放が可能なものをヒープ領域というが、これをヒープと略す場合がある。

-GC
garbage collection。コンピュータプログラムが動的に確保したメモリ領域のうち、不要になった領域を自動的に解放する機能。

GoF
Gang of Four。書籍『オブジェクト指向における再利用のためのデザインパターン』(原題:Design Patterns: Elements of Reusable Object-Oriented Software) の著者である、エーリヒ・ガンマ、リチャード・ヘルム、ラルフ・ジョンソン、ジョン・ブリシディースの4人を指す。

デザインパターン
過去のソフトウェア設計者が発見し編み出した設計ノウハウを蓄積し、名前をつけ、再利用しやすいように特定の規約に従ってカタログ化したもの。

■ その他
オブジェクト指向
コンピュータプログラムの設計や実装についての考え方の一つで、互いに密接に関連するデータと手続き（処理手順）をオブジェクトと呼ばれる一つのまとまりとして定義し、様々なオブジェクトを組み合わせて関連性や相互作用を記述していくことによりシステム全体を構築していく手法。

バッチ処理
一定量の(あるいは一定期間)データを集め、一括処理するための処理方法。あらかじめ一連の手順を登録しておき、まとめて連続的に実行する。

コンパイル
プログラミング言語で書かれたコンピュータプログラム(ソースコード)を解析し、コンピュータが直接実行可能な形式のプログラムに変換すること。

カバレッジ
ソフトウェア開発の最終的な検証段階における、テストが行こなわれる範囲。またはその網羅率。

プラットホーム
ある機器やソフトウェアを動作させるのに必要な、基盤となる装置やソフトウェア、サービス、それらの組み合わせ(動作環境)のこと。
